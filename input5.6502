; ROM routines
define		SCINIT		$ff81 ; initialize/clear screen
define		CHRIN		$ffcf ; input character from keyboard
define		CHROUT		$ffd2 ; output character to screen
define		SCREEN		$ffed ; get screen size
define		PLOT		$fff0 ; get/set cursor coordinates

; Memory locations
define		INPUT		$2000 ; input buffer (up to 5 chars)


	JSR SCINIT

	LDY #$00
PROMPT_CHAR:
	LDA PROMPT_TEXT,Y
	BEQ DONE_PROMPT
	JSR CHROUT
	INY
	BNE PROMPT_CHAR

DONE_PROMPT:
	JSR GET_INPUT

	LDA #$0D
	JSR CHROUT

	LDY #$00
INPUT_PRINT:
	LDA INPUT,Y
	JSR CHROUT
	INY
	CPY #$05
	BNE INPUT_PRINT

	BRK

PROMPT_TEXT:
	dcb "E","n","t","e","r",32,"a",32,"5","-","l","e"
	dcb "t","t","e","r",32,"w","o","r","d",":",32,00


; ---------------------------------------------------------------

GET_INPUT:
	LDA #$A0	; CODE FOR BLACK SPACE
	JSR CHROUT
	LDA #$83	; CODE TO MOVE CURSOR LEFT ONE POSITION
	JSR CHROUT

	LDY #$00	; COUNT OF CHARACTERS TYPED
	
GET_CHAR:
	JSR CHRIN
	CMP #$00
	BEQ GET_CHAR

	CMP #$08	; COMPARE INPUT CHAR WITH BACKSPACE
	BNE CHECK_ENTER	; ... IF NOT BS, THEN CHECK FOR ENTER

	CPY #$00	; COMPARE CHAR COUNT WITH 0
	BEQ GET_CHAR	; ... IF EQUAL THEN GET ANOTHER CHAR

	DEY
	LDA #$20	; LOAD A WITH CODE FOR WHITE SPACE
	JSR CHROUT
	LDA #$83	; CODE TO MOVE CURSOR LEFT ONE POSITION
	JSR CHROUT
	JSR CHROUT
	LDA #$A0	; CODE FOR BLACK SPACE
	JSR CHROUT
	LDA #$83	; CODE TO MOVE CURSOR LEFT ONE POSITION
	JSR CHROUT

CHECK_ENTER:
	CMP #$0D	; COMPARE INPUT CHAR WITH ENTER
	BNE CHECK_LETTER ; ... IF NOT ENTER, CHECK FOR LETTERS
	CPY #$05	; SEE IF WE HAVE 5 CHARACTERS
	BEQ DONE_INPUT	; IF WE HAVE 5 CHARS, AND THE USER PRESSED ENTER, DONE!

CHECK_LETTER:
	CMP #97		; COMPARE INPUT CHAR WITH 'a'
	BCC UPPERCASE	; ... IF LOWER, CHECK IF IT'S UPPERCASE

	CMP #123	; COMPARE INPUT CHAR WITH 'z' + 1
	BCS GET_CHAR	; ... IF HIGHER THAN 'z' THEN GET ANOTHER CHAR

	SEC
	SBC #32		; SUBTRACT 32 TO CONVERT lowercase TO UPPERCASE

UPPERCASE:
	CMP #65		; COMPARE INPUT CHAR WITH A     C=1 IF A>=65 ; C=0 IF A<65	
	BCC GET_CHAR	; ... IF LOWER THAN 'A' THEN GET ANOTHER CHAR

	CMP #91		; COMPARE INPUT CHAR WITH Z + 1
	BCS GET_CHAR	; ... IF HIGHER THAN 'Z' THEN GET ANOTHER CHAR

	CPY #$05	; CHECK THE COUNT OF CHARACTERS
	BEQ GET_CHAR	; ... IF WE HAVE 5 WE CAN'T ACCEPT ANOTHER ONE

	STA INPUT,Y
	JSR CHROUT	; PRINT RECEIVED LETTER ON THE SCREEN

	LDA #$A0	; CODE FOR BLACK SPACE
	JSR CHROUT
	LDA #$83	; CODE TO MOVE CURSOR LEFT ONE POSITION
	JSR CHROUT

	INY

	JMP GET_CHAR

DONE_INPUT:
	LDA #$20	; LOAD A WITH CODE FOR WHITE SPACE
	JSR CHROUT

	RTS
