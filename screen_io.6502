; screen I/O handling
;
; Available routines (inputs)
;   PUT - output a printable or control character (A)
;   CHROUT - output a printable character (A)
;   GOTO - set SCREEN_PTR based on X and Y (none)
;   C_UP, C_RIGHT, C_LEFT, C_DOWN - move cursor (none)
;   C_RETURN - handle carriage return (none)
;   C_BS - handle backspace (none)
;   SCROLL - scroll screen (none)
;   CLEAR - clear screen (none)
;

; zero-page variables
define		C_FLASH		$00
define		X		$01
define		Y		$02
define		SCREEN_PTR	$03
define		SCREEN_PTR_HI	$04
define		SCROLL_SRC	$05
define		SCROLL_SRC_HI	$06
define		SCROLL_DST	$07
define		SCROLL_DST_HI	$08
define		TEMP_Y		$09

; constants
define		SCREEN_BASE	$f000 ; first char on screen
define		SCREEN_LAST	$f780 ; start of last row
define		ROWS		25
define		COLS		80

; main code
		lda #$00
		sta X
		sta Y

		lda #00
		sta $ff

loop:		jsr GOTO
		ldy #$00
		lda (SCREEN_PTR),y
		ora #$80
		sta (SCREEN_PTR),y

getkey:		lda $ff
		beq getkey

		ldx #00
		stx $ff

		pha

		jsr GOTO
		ldy #$00
		lda (SCREEN_PTR),y
		and #$7f
		sta (SCREEN_PTR),y

		pla
		
		jsr PUT

		clc
		bcc loop

*=$f900

; ==================================================
; GOTO :: position to (X,Y) on screen

GOTO:		pha
		txa
		pha
		tya
		pha

		ldy Y
		lda goto_tbl_low,y
		clc
		adc X
		sta SCREEN_PTR
		lda goto_tbl_hi,y
		adc #$00
		sta SCREEN_PTR_HI
		
		pla
		tay
		pla
		tax
		pla

		rts

goto_tbl_low:
dcb $00,$50,$A0,$F0,$40,$90,$E0,$30,$80,$D0,$20
dcb $70,$C0,$10,$60,$B0,$00,$50,$A0,$F0,$40,$90
dcb $E0,$30,$80

goto_tbl_hi:
dcb $F0,$F0,$F0,$F0,$F1,$F1,$F1,$F2,$F2,$F2,$F3
dcb $F3,$F3,$F4,$F4,$F4,$F5,$F5,$F5,$F5,$F6,$F6
dcb $F6,$F7,$F7

; ==================================================
; PUT :: output a printable or control character
;        regA = character

PUT:		cmp #$08
		beq C_BS
		cmp #$0a
		beq C_RETURN
		cmp #$0d
		beq C_RETURN
		cmp #$80
		beq C_UP
		cmp #$81
		beq C_RIGHT
		cmp #$82
		beq C_DOWN
		cmp #$83
		beq C_LEFT

; ==================================================
; CHROUT :: output a printable character
;           regA = character

CHROUT:		jsr GOTO
		pha
		sty TEMP_Y

		ldy #$00
		sta (SCREEN_PTR),y

		jsr C_RIGHT

		ldy TEMP_Y
		pla
		rts

; ==================================================
; C_BS :: backspace

C_BS:		pha
		tya
		pha
		txa
		pha

		jsr C_LEFT
		jsr GOTO
		ldy #$00
		lda #$20
		sta (SCREEN_PTR),y

		ldx COLS
		dex

		pla
		tax
		pla
		tay
		pla

		rts

; ==================================================
; C_RETURN :: carriage return

C_RETURN:	pha
		
		lda #$00
		sta X
		jsr C_DOWN

		pla
		rts

; ==================================================
; C_RIGHT :: move cursor one position right

C_RIGHT:	pha
		
		inc X
		lda #COLS
		cmp X
		bne c_right_done

		lda #$00
		sta X
		jsr C_DOWN

c_right_done:	pla
		rts

; ==================================================
; C_LEFT :: move cursor one position left

C_LEFT:		pha
		
		dec X
		bpl c_left_done

		lda Y
		beq c_left_home

		lda #COLS
		sta X
		jsr C_UP

		clc
		bcc c_left_done

c_left_home:	lda #$00
		sta X
		sta Y

c_left_done:	pla
		rts

; ==================================================
; C_DOWN :: move cursor one position down

C_DOWN:		pha

		inc Y
		lda #ROWS
		cmp Y
		bne c_down_done

		jsr SCROLL

		dec Y

c_down_done:	pla
		rts

; ==================================================
; C_UP :: move cursor one position down

C_UP:		dec Y
		bpl c_up_done

		inc Y ; go to first row if off screen

c_up_done:	rts



; ==================================================
; CLEAR :: clear the screen

CLEAR:		pha
		tya
		pha

		LDA #$00
		STA X
		STA Y
		jsr GOTO
		
		ldy #$00
clear_loop_2:	lda #$20

clear_loop:	sta (SCREEN_PTR),y
		iny
		bne clear_loop

		inc SCREEN_PTR_HI
		lda SCREEN_PTR_HI
		cmp #$f8
		bne clear_loop_2

		jsr GOTO

		pla
		tya
		pla

		rts
		

; ==================================================
; SCROLL :: scroll screen up one line

SCROLL:		pha
		tya
		pha

		lda #$00
		sta SCROLL_DST
		lda #COLS
		sta SCROLL_SRC
		lda #$f0
		sta SCROLL_SRC_HI
		sta SCROLL_DST_HI

		ldy #$00

scroll_loop:	lda (SCROLL_SRC),y
		sta (SCROLL_DST),y
		iny
		bne scroll_loop

		inc SCROLL_SRC_HI
		inc SCROLL_DST_HI
		lda #$f7
		cmp SCROLL_SRC_HI
		bne scroll_loop

scroll_loop2:	lda (SCROLL_SRC),y
		sta (SCROLL_DST),y
		iny
		cpy #$80
		bne scroll_loop2

		ldy #$00
		lda #$20
clear_last:	sta SCREEN_LAST,y
		iny
		cpy #80
		bne clear_last

		pla
		tay
		pla
		rts
